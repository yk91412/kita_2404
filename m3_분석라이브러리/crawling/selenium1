## 과제 풀이

- 요청이 성공했는지 확인

  response.raise_for_status()


==============================================================

- h3.product-name a 와 h3.product-name > a 차이점

  h3.product-name > a는 직계 자식 <a> 태그를 선택하는 반면

  h3.product-name a는 h3 태그 아래에 있는 모든 자식 및 자손 <a> 태그를 선택



- .attrs['href'] == ['href']




line['href'] => 상대경로이므로 절대경로로 변경해주어야함
        link = 'https://finance.naver.com' + line['href']


==============================================================


** Selenium 함수


- find_element(By.ID, " "): id 속성을 사용하여 접근

    id는 각 1개(중복 없음)

  
- find_element(s)(By.CLASS_NAME, " "): 클래스를 사용하여 접근

- find_element(s)(By.NAME, " "): name 속성을 사용하여 접근

- find_element(s)(By.XPATH, " "): xpath 속성을 사용하여 접근

- find_element(s)(By.LINK_TEXT, " "): 앵커태그(a 태그)에 사용되는 텍스트로 접근

- find_element(s)(By.PARTIAL_LINK_TEXT, " "): 앵커태그(a 태그)에 사용되는 일부 텍스트로 접근

- find_element(s)(By.TAG_NAME, " "): 태그를 사용하여 접근

- find_element(s)(By.CSS_SELECTOR, " "): CSS 선택자를 사용하여 접근



==============================================================

** 브라우저 닫기


- driver.close() : 현재 활성화된 탭이나 창을 닫습니다

          브라우저 세션은 계속 유지
          
- driver.quit() : 모든 열려 있는 탭과 창을 닫고, 브라우저 세션을 종료

          WebDriver 인스턴스가 완전히 종료

- options.add_experimental_option('detach',True)

    스크립트가 종료된 후에도 브라우저가 닫히지 않도록 설정



** 브라우저 대기


1.

- webDriverwait 클래스

  특정 조건이 충족될 때까지 대기하는 기능

- expected_conditions 모듈

  여러 가지 조건을 미리 정의하여 특정 요소가 나타나거나 특정 상태가 될 때까지 기다릴 수 있도록 함

  ex) element = WebDriverWait(driver,5).until(
          EC.presence_of_element_located((By.CLASS_NAME, 'gLFyf'))
      )

 2.
 
- time.sleep(원하는 초)




** 브라우저 크기 설정

- options.add_argument('--start-maximized') #브라우저를 최대화된 상태로 시작하도록 설정

- driver.maximize_window()




** 기타

driver.forward() - 앞으로 이동

driver.back() - 뒤로 이동

driver.refresh() - 새로고침

.send_keys(Keys.ENTER) - enter 입력
