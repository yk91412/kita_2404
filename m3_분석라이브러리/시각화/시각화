
- pivot_table : 원하는 컬럼만 추출해서 볼 수 있음

- crosstab : 데이터프레임에서 간단하게 교차표를 생성하는 기능


      => 두 개 이상의 변수(피처)를 기준으로 교차 빈도를 계산하여 테이블 형태로 제공



=======================================================================


** 마크업 vs 마진

    마크업은 순수한 비용(총 금액에서 팁을 제외한 금액)에 대한 추가 비용의 비율
    
    마진은 전체 금액에 대한 추가 비용의 비율

    ex) 팁이 10, 총 청구 금액이 100이라면

        마크업은 10 / (100-90) * 100

        마진은 10 / 100 * 100



=======================================================================



** plt.bar vs sns.barplot

  plt.bar는 기본적이고 범용적인 막대 그래프를 그릴 때 사용

  sns.barplot은 통계적 그래픽을 강조하고 더 풍부한 기능

    => 자동으로 그룹화하여 평균과 신뢰 구간을 계산하고 오차 막대를 추가하여 데이터의 분포를 표현


- sns.barplot

option ==>

  orient : 그래프 방향

    기본값은 'vertical'이며, 'horizontal'로 설정 가능

    ex) orient = 'h'

  errobar : 오차 막대 제어

  width : 넓이 조절

  palette : 색상 팔레트를 지정하여 막대의 색상을 설정


- sns.countplot

  주어진 데이터셋에서 각 카테고리별로 데이터의 개수를 세어 막대 그래프로 나타내는 기능

  주로 범주형 변수의 분포를 시각화할 때 사용

  hue : 데이터를 추가적으로 구분할 변수



- sns.histplot

  kde = True로 커널 밀도 추정을 활성화 시킬 수 있다

  => 데이터의 분포를 부드럽게 추정한 커널 밀도 그래프가 표시


  ex) sns.histplot(값, kde=Ture,bins ~..)


- sns.violinplot

  박스 플롯과 커널 밀도 추정을 결합한 형태로 데이터의 형태

  터널 밀도 추정의 결과를 y축 방향에 추가하여 데이터가 퍼져있는 분산의 정도 파악

  ex) sns.violinplot(x='species',y = 'length',data = ~ )


- sns.jointplot

  산점도와 각 변수에 대한 히스토그램이나 커널 밀도 추정을 결합하여

  변수간의 분포를 동시에 탐색할 수 있게 해줌

  ex) sns.jointplot(x = 'x', y='y', data =~ , kind='reg')


  => kind = 'reg' : 선형 회귀 선(산점도 위에 그려진 직선)

                  두 변수 간의 선형 관계를 시각적으로 보여주는데 유용
  
=======================================================================


- .query

  Pandas 데이터프레임에서 특정 조건을 만족하는 데이터를 필터링하기 위해 사용되는 메서드
  
  문자열 형태로 조건을 지정
  
    ex) .query('species== "A"')


- df 한 컬럼에 있는 값 비교

  ex) species에 A, B 비교

    sns.boxplot( x = 'species', y = 'length', data = '~')

    => 길이에 따른 종 마다의 박스플롯 생성



